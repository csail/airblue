// generated by compute-ber.py
// table for rate 4 (exact)
// (computed without odd hints)

double get_ber_r4(UINT8 hint) {
   switch (hint) {
      case  0: return 0.500000000000000;
      case  1: return 0.406673735713650;
      case  2: return 0.306386067137524;
      case  3: return 0.244496612329028;
      case  4: return 0.162404387538251;
      case  5: return 0.128929179334571;
      case  6: return 0.077140959409374;
      case  7: return 0.062581674461759;
      case  8: return 0.034090288619584;
      case  9: return 0.028790600065926;
      case 10: return 0.014429716632799;
      case 11: return 0.012514630907159;
      case 12: return 0.005901376928092;
      case 13: return 0.005735912239446;
      case 14: return 0.002405626315021;
      case 15: return 0.002604873672416;
      case 16: return 0.000939728047271;
      case 17: return 0.001138602248973;
      case 18: return 0.000371586045843;
      case 19: return 0.000489360945855;
      case 20: return 0.000145970672525;
      case 21: return 0.000195822739261;
      case 22: return 0.000056697413567;
      case 23: return 0.000094687794037;
      case 24: return 0.000021898962693;
      case 25: return 0.000032611546740;
      case 26: return 0.000007752380310;
      case 27: return 0.000023210676086;
      case 28: return 0.000003007672137;
      case 29: return 0.000005801927981;
      case 30: return 0.000001103884218;
      case 31: return 0.000003025985143;
      case 32: return 0.000000370005227;
      case 33: return 0.000001610858475;
      case 34: return 0.000000277196748;
      case 35: return 0.000000000000000;
      case 36: return 0.000000030324178;
      case 37: return 0.000000000000000;
      case 38: return 0.000000021043320;
      case 39: return 0.000000000000000;
      case 40: return 0.000000009775329;
      case 41: return 0.000000000000000;
      case 42: return 0.000000000000000;
      case 43: return 0.000000000000000;
      case 44: return 0.000000000000000;
      case 45: return 0.000000000000000;
      case 46: return 0.000000000000000;
      case 47: return 0.000000000000000;
      case 48: return 0.000000000000000;
      case 49: return 0.000000000000000;
      case 50: return 0.000000000000000;
      case 51: return 0.000000000000000;
      case 52: return 0.000000000000000;
      case 53: return 0.000000000000000;
      case 54: return 0.000000000000000;
      case 55: return 0.000000000000000;
      case 56: return 0.000000000000000;
      case 57: return 0.000000000000000;
      case 58: return 0.000000000000000;
      case 59: return 0.000000000000000;
      case 60: return 0.000000000000000;
      case 61: return 0.000000000000000;
      case 62: return 0.000000000000000;
      case 63: return 0.000000000000000;
      default: return 0;
   }
}
