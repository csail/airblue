// generated by compute-ber.py
// table for rate 7 (exact)
// (computed without odd hints)

double get_ber_r7(UINT8 hint) {
   switch (hint) {
      case  0: return 0.500000000000000;
      case  1: return 0.437888121559734;
      case  2: return 0.376254886385533;
      case  3: return 0.323030553964765;
      case  4: return 0.261627206203857;
      case  5: return 0.222253304020288;
      case  6: return 0.166946718681596;
      case  7: return 0.142211316731505;
      case  8: return 0.095854274471847;
      case  9: return 0.083524359699346;
      case 10: return 0.050133771836795;
      case 11: return 0.046182295500183;
      case 12: return 0.024007993425181;
      case 13: return 0.023975417748382;
      case 14: return 0.010796149291444;
      case 15: return 0.012293717372212;
      case 16: return 0.004659463364603;
      case 17: return 0.006206338030443;
      case 18: return 0.001956130028155;
      case 19: return 0.003001004702172;
      case 20: return 0.000804078851286;
      case 21: return 0.001470720229776;
      case 22: return 0.000340221494849;
      case 23: return 0.000568967582459;
      case 24: return 0.000146597148120;
      case 25: return 0.000305592339819;
      case 26: return 0.000058521625671;
      case 27: return 0.000160054418502;
      case 28: return 0.000027776882265;
      case 29: return 0.000078647267007;
      case 30: return 0.000018357580245;
      case 31: return 0.000000000000000;
      case 32: return 0.000006351141935;
      case 33: return 0.000000000000000;
      case 34: return 0.000000000000000;
      case 35: return 0.000000000000000;
      case 36: return 0.000000000000000;
      case 37: return 0.000000000000000;
      case 38: return 0.000000000000000;
      case 39: return 0.000000000000000;
      case 40: return 0.000000000000000;
      case 41: return 0.000000000000000;
      case 42: return 0.000000000000000;
      case 43: return 0.000000000000000;
      case 44: return 0.000000000000000;
      case 45: return 0.000000000000000;
      case 46: return 0.000000000000000;
      case 47: return 0.000000000000000;
      case 48: return 0.000000000000000;
      case 49: return 0.000000000000000;
      case 50: return 0.000000000000000;
      case 51: return 0.000000000000000;
      case 52: return 0.000000000000000;
      case 53: return 0.000000000000000;
      case 54: return 0.000000000000000;
      case 55: return 0.000000000000000;
      case 56: return 0.000000000000000;
      case 57: return 0.000000000000000;
      case 58: return 0.000000000000000;
      case 59: return 0.000000000000000;
      case 60: return 0.000000000000000;
      case 61: return 0.000000000000000;
      case 62: return 0.000000000000000;
      case 63: return 0.000000000000000;
      default: return 0;
   }
}
