// total ber: 0.004892
// a = 0.364000 b = 0.000000
// generated by compute-ber.py
// table for rate 7 (curve fit)
// (computed without odd hints)

double get_ber_r7(UINT8 hint) {
   switch (hint) {
      case  0: return 0.500000000000000;
      case  1: return 0.409991624771120;
      case  2: return 0.325633766997562;
      case  3: return 0.251241852472304;
      case  4: return 0.189079877287189;
      case  5: return 0.139433872961650;
      case  6: return 0.101196523931332;
      case  7: return 0.072560962093229;
      case  8: return 0.051563538217837;
      case  9: return 0.036403770617844;
      case 10: return 0.025580788312008;
      case 11: return 0.017915695187633;
      case 12: return 0.012517884549183;
      case 13: return 0.008731917710034;
      case 14: return 0.006083941475421;
      case 15: return 0.004235539640843;
      case 16: return 0.002947047672409;
      case 17: return 0.002049720525648;
      case 18: return 0.001425224062670;
      case 19: return 0.000990806502318;
      case 20: return 0.000688710914073;
      case 21: return 0.000478679735730;
      case 22: return 0.000332678921018;
      case 23: return 0.000231199120359;
      case 24: return 0.000160669566743;
      case 25: return 0.000111653340630;
      case 26: return 0.000077589566466;
      case 27: return 0.000053917582946;
      case 28: return 0.000037467469998;
      case 29: return 0.000026036112627;
      case 30: return 0.000018092409133;
      case 31: return 0.000012572325199;
      case 32: return 0.000008736431591;
      case 33: return 0.000006070885568;
      case 34: return 0.000004218612740;
      case 35: return 0.000002931480620;
      case 36: return 0.000002037061892;
      case 37: return 0.000001415537252;
      case 38: return 0.000000983644797;
      case 39: return 0.000000683526313;
      case 40: return 0.000000474976516;
      case 41: return 0.000000330057046;
      case 42: return 0.000000229353758;
      case 43: return 0.000000159375918;
      case 44: return 0.000000110748928;
      case 45: return 0.000000076958457;
      case 46: return 0.000000053477756;
      case 47: return 0.000000037161222;
      case 48: return 0.000000025823006;
      case 49: return 0.000000017944180;
      case 50: return 0.000000012469253;
      case 51: return 0.000000008664774;
      case 52: return 0.000000006021075;
      case 53: return 0.000000004183992;
      case 54: return 0.000000002907419;
      case 55: return 0.000000002020340;
      case 56: return 0.000000001403917;
      case 57: return 0.000000000975569;
      case 58: return 0.000000000677914;
      case 59: return 0.000000000471077;
      case 60: return 0.000000000327347;
      case 61: return 0.000000000227471;
      case 62: return 0.000000000158067;
      case 63: return 0.000000000109840;
      default: return 0;
   }
}
